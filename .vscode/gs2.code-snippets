{
	// Place your Glyphr-Studio-2 workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	"debug-message": {
		"prefix": "logm",
		"body": ["log(`${1:message}`);\n$0"],
		"description": "Debug message - regular message"
	},

	"debug-variable": {
		"prefix": "logv",
		"body": ["log(`${1:varname}: ${${1:varname}}`);\n$0"],
		"description": "Debug message - variable"
	},

	"debug-start": {
		"prefix": "logs",
		"body": ["log(`${1:functionName}`, 'start');\n$0"],
		"description": "Debug message - start of function"
	},

	"debug-end": {
		"prefix": "loge",
		"body": ["log(`${1:functionName}`, 'end');"],
		"description": "Debug message - end of function"
	},

	"debug-both": {
		"prefix": "logb",
		"body": [
			"log(`${1:functionName}`, 'start');",
			"$0",
			"log(`${1:functionName}`, 'end');"],
		"description": "Debug message - start and end of function"
	},

	"test": {
		"prefix": "test",
		"body": [
			"{",
			"    category: '${1}',",
			"    name: '${2}',",
			"    assertion: function() {",
			"        return _TEST.is(${3}).equalTo(${4});",
			"    },",
			"},"
		]
	},

	"testfunction": {
		"prefix": "tf",
		"body": [
			"{",
			"    category: '${1}',",
			"    name: '${2}',",
			"    assertion: function() {${3}",
			"        return _TEST.is(sample${1}().${2}(${5})).equalTo(${6});",
			"    },",
			"},"
		]
	},

	"sectionComment": {
		"prefix": "sec",
		"body": [
			"",
			"",
			"// --------------------------------------------------------------",
			"// $1",
			"// --------------------------------------------------------------",
			"",
			"$0"
		]
	}
}
